{"is_source_file": true, "format": "Python", "description": "This is the __init__.py file for a Flask web application, which sets up the application, configures CORS, API documentation, database initialization, and registers various blueprints related to health checks, authentication, and task management.", "external_files": ["flask", "flask_cors", "flask_smorest", "os", "./db", "./models", "./routes/health", "./routes/auth", "./routes/tasks"], "external_methods": ["flask.Flask", "flask_cors.CORS", "flask_smorest.Api", "os.getenv", "./db.init_engine", "./db.get_database_uri", "./db.get_engine", "./db.get_session", "./db.remove_session", "./db.Base.metadata.create_all", "./routes.health.blp", "./routes.auth.blp", "./routes.tasks.blp", "./routes.tasks.subtasks_blp"], "published": ["app"], "classes": [], "methods": [{"name": "_db_before_request()", "description": "Creates a new database session and assigns it to the Flask 'g' object at the start of each request.", "parameters": [], "scope": "", "scopeKind": ""}, {"name": "_db_teardown(exception)", "description": "Removes the database session after the request to prevent connection leaks.", "parameters": ["exception"], "scope": "", "scopeKind": ""}], "calls": ["os.getenv", "CORS", "Api", "init_engine", "get_database_uri", "get_session", "remove_session", "Base.metadata.create_all", "get_engine", "get_session", "register_blueprint"], "search-terms": ["Flask application", "CORS configuration", "OpenAPI setup", "database session management", "blueprint registration", "task and auth routes"], "state": 2, "file_id": 5, "knowledge_revision": 28, "git_revision": "0f89af57e5d332be349936f5cbb1a09cc26fa2ba", "revision_history": [{"13": "d8fbcb05b4a23f2adf7bcec8421eff2f31311f6e"}, {"18": "d8fbcb05b4a23f2adf7bcec8421eff2f31311f6e"}, {"28": "0f89af57e5d332be349936f5cbb1a09cc26fa2ba"}], "ctags": [{"_type": "tag", "name": "_db_before_request", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^def _db_before_request():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_db_teardown", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^def _db_teardown(exception):$/", "language": "Python", "kind": "function", "signature": "(exception)"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^api = Api(app, spec_kwargs={\"servers\": [{\"url\": \"\\/\"}]})$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^app = Flask(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auth_blp", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^from .routes.auth import blp as auth_blp  # noqa: E402$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "cors_origins", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^cors_origins = list({*default_origins, *extra_origins}) if extra_origins else default_origins$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "default_origins", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^default_origins = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "extra_origins", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^extra_origins = [o.strip() for o in os.getenv(\"FRONTEND_ORIGIN\", \"\").split(\",\") if o.strip()]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^from .routes.health import blp as health_blp  # noqa: E402$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "subtasks_blp", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^from .routes.tasks import subtasks_blp as subtasks_blp  # noqa: E402$/", "language": "Python", "kind": "unknown", "nameref": "unknown:subtasks_blp"}, {"_type": "tag", "name": "tasks_blp", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/__init__.py", "pattern": "/^from .routes.tasks import blp as tasks_blp  # noqa: E402$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}], "hash": "f94ad52320b81e2a8ab1dc5287ac6aa0", "format-version": 4, "code-base-name": "todo_backend", "filename": "todo_backend/app/__init__.py", "fields": [{"name": "api = Api(app, spec_kwargs={\"servers\": [{\"url\": \"\\/\"}]})", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = Flask(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "cors_origins = list({*default_origins, *extra_origins}) if extra_origins else default_origins", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "default_origins = [", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "extra_origins = [o.strip() for o in os.getenv(\"FRONTEND_ORIGIN\", \"\").split(\",\") if o.strip()]", "scope": "", "scopeKind": "", "description": "unavailable"}]}