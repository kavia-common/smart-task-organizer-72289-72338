{"is_source_file": true, "format": "Python", "description": "This Python source file defines authentication-related API endpoints using Flask. It includes route handlers for login, logout, and fetching the current user session, along with associated schemas for request and response validation.", "external_files": ["flask", "flask.views", "flask_smorest", "marshmallow", "../models"], "external_methods": ["g.db.query", "g.db.add", "g.db.commit", "g.db.refresh", "session", "session.clear", "session.get"], "published": ["blp"], "classes": [{"name": "LoginRequestSchema", "description": "Schema for login request payload, validating the username input."}, {"name": "UserResponseSchema", "description": "Schema for serializing user information in response payloads."}, {"name": "MeResponseSchema", "description": "Schema for returning the current user based on session."}, {"name": "LoginResponseSchema", "description": "Schema for the login response containing user info."}, {"name": "LogoutResponseSchema", "description": "Schema for logout response indicating success status."}, {"name": "Login", "description": "Route handler for user login via session, creating user if absent."}, {"name": "Logout", "description": "Route handler for logging out the current user session."}, {"name": "Me", "description": "Route handler to retrieve the current logged-in user information."}], "methods": [{"name": "Dict[str,Any] _serialize_user(user: User)", "description": "Function to serialize User model objects into a dictionary for JSON responses.", "scope": "", "scopeKind": ""}, {"name": "get(self)", "scope": "Me", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self)", "scope": "Logout", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, json_data)", "scope": "Login", "scopeKind": "class", "description": "unavailable"}], "calls": ["db.query", "db.add", "db.commit", "db.refresh", "session.clear", "session.get", "session.__setitem__"], "search-terms": ["Flask authentication endpoints", "session-based login", "User model serialization", "Blueprint routes for auth", "Schema for login requests"], "state": 2, "file_id": 9, "knowledge_revision": 23, "git_revision": "0f89af57e5d332be349936f5cbb1a09cc26fa2ba", "revision_history": [{"21": ""}, {"22": "0f89af57e5d332be349936f5cbb1a09cc26fa2ba"}, {"23": "0f89af57e5d332be349936f5cbb1a09cc26fa2ba"}], "ctags": [{"_type": "tag", "name": "Login", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^class Login(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LoginRequestSchema", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^class LoginRequestSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LoginResponseSchema", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^class LoginResponseSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Logout", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^class Logout(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LogoutResponseSchema", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^class LogoutResponseSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Me", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^class Me(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MeResponseSchema", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^class MeResponseSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Meta", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    class Meta:$/", "language": "Python", "kind": "class", "scope": "LoginRequestSchema", "scopeKind": "class"}, {"_type": "tag", "name": "UserResponseSchema", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^class UserResponseSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_serialize_user", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^def _serialize_user(user: User) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(user: User)"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    created_at = fields.String(required=False, allow_none=True, metadata={\"description\": \"User c/", "language": "Python", "kind": "variable", "scope": "UserResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Me", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    id = fields.Integer(required=True, metadata={\"description\": \"User ID\"})$/", "language": "Python", "kind": "variable", "scope": "UserResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    def post(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Logout", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    def post(self, json_data):$/", "language": "Python", "kind": "member", "signature": "(self, json_data)", "scope": "Login", "scopeKind": "class"}, {"_type": "tag", "name": "success", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    success = fields.Boolean(required=True, metadata={\"description\": \"True if logout succeeded\"}/", "language": "Python", "kind": "variable", "scope": "LogoutResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "unknown", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^        unknown = EXCLUDE$/", "language": "Python", "kind": "variable", "scope": "LoginRequestSchema.Meta", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    user = fields.Nested(UserResponseSchema, allow_none=True, metadata={\"description\": \"The curr/", "language": "Python", "kind": "variable", "scope": "MeResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    user = fields.Nested(UserResponseSchema, required=True, metadata={\"description\": \"The logged/", "language": "Python", "kind": "variable", "scope": "LoginResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    username = fields.String($/", "language": "Python", "kind": "variable", "scope": "LoginRequestSchema", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/smart-task-organizer-72289-72338/todo_backend/app/routes/auth.py", "pattern": "/^    username = fields.String(required=True, metadata={\"description\": \"Username\"})$/", "language": "Python", "kind": "variable", "scope": "UserResponseSchema", "scopeKind": "class"}], "hash": "ca7a8056fb966d50cd7d2dd484d33331", "format-version": 4, "code-base-name": "todo_backend", "filename": "todo_backend/app/routes/auth.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "created_at = fields.String(required=False, allow_none=True, metadata={\"description\": \"User c/", "scope": "UserResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "id = fields.Integer(required=True, metadata={\"description\": \"User ID\"})", "scope": "UserResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "success = fields.Boolean(required=True, metadata={\"description\": \"True if logout succeeded\"}/", "scope": "LogoutResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "unknown = EXCLUDE", "scope": "LoginRequestSchema.Meta", "scopeKind": "class", "description": "unavailable"}, {"name": "user = fields.Nested(UserResponseSchema, allow_none=True, metadata={\"description\": \"The curr/", "scope": "MeResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "user = fields.Nested(UserResponseSchema, required=True, metadata={\"description\": \"The logged/", "scope": "LoginResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "username = fields.String(", "scope": "LoginRequestSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "username = fields.String(required=True, metadata={\"description\": \"Username\"})", "scope": "UserResponseSchema", "scopeKind": "class", "description": "unavailable"}]}